services:
  apigateway:
    image: apigateway:latest
    build:
      context: ./eCommerceSolution.OrdersService
      dockerfile: ApiGateway/Dockerfile
    ports:
      - "5000:8080"
    networks:
      - ecommerce-network
    depends_on:
      - orders-microservice
      - products-microservice
      - users-microservice

  users-microservice:
    image: users-microservice:latest
    build:
      context: ./eCommerceSolution.UsersService
      dockerfile: eCommerce.API/Dockerfile
    env_file:
      - ./postgres/postgres-secrets.env
      - ./postgres/postgres-config.env
      - ./services/users/env.users
    networks:
      - users-postgres-network
      - ecommerce-network
    depends_on:
      - postgres-container

  postgres-container:
    image: ecommerce-postgres:latest
    build:
      context: ./postgres
      dockerfile: Dockerfile
    env_file:
      - ./postgres/postgres-secrets.env
      - ./postgres/postgres-config.env
    ports:
      - "5432:5432"
    networks:
      - users-postgres-network

  products-microservice:
    image: products-microservice:latest
    build:
      context: ./eCommerceSolution.ProductsService
      dockerfile: ProductsMicroService.API/Dockerfile
    env_file:
      - ./mysql/mysql-secrets.env
      - ./mysql/mysql-config.env
      - ./services/products/env.products
    networks:
      - products-mysql-network
      - ecommerce-network
    depends_on:
      - mysql-container
      - rabbitmq
      - redis

  mysql-container:
    image: ecommerce-mysql:latest
    build:
      context: ./mysql
      dockerfile: Dockerfile
    env_file:
      - ./mysql/mysql-secrets.env
      - ./mysql/mysql-config.env
    ports:
      - "3306:3306"
    networks:
      - products-mysql-network

  orders-microservice:
    image: orders-microservice:latest
    build:
      context: ./eCommerceSolution.OrdersService
      dockerfile: OrdersMicroservice.API/Dockerfile
    env_file:
      - ./mongodb/mongodb-secrets.env
      - ./mongodb/mongodb-config.env
      - ./services/orders/env.orders
    networks:
      - orders-mongodb-network
      - ecommerce-network
    depends_on:
      - mongodb-container
      - rabbitmq
      - redis

  mongodb-container:
    image: ecommerce-mongodb:latest
    build:
      context: ./mongodb
      dockerfile: Dockerfile
    env_file:
      - ./mongodb/mongodb-secrets.env
    ports:
      - "27017:27017"
    networks:
      - orders-mongodb-network

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      - ecommerce-network

  rabbitmq:
    image: rabbitmq:4.1.0-management
    env_file:
      - ./rabbitmq/rabbitmq-secrets.env
    ports:
      - "15672:15672"
      - "5672:5672"
    networks:
      - ecommerce-network

networks:
  ecommerce-network:
    driver: bridge
  users-postgres-network:
    driver: bridge
  products-mysql-network:
    driver: bridge
  orders-mongodb-network:
    driver: bridge
